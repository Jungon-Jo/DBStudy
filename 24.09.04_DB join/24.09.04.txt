
	풀이 순서
	select 절의 정의, select 절의 순서, 미완성 시 수식, 함수, 서브쿼리 사용

	select 절이 실행되는 순서
	→ 어떤 테이블에서 데이터를 가져올꺼야?(from)
	→ 어떤 조건의 튜플을 가져올꺼야?(where)
	→ 가져온 튜플에서 어떤 정보를 출력할거야?(select)
	→ 이런 배열을 가지고 출력할게(order by)

	join → 정의 : 한개 이상의 테이블을 논리적으로 합치는 것
	
	table이 나눠지는게 좋은 이유 :
	중복을 최소화 시키기 위해(중복이 많아질수록 데이터의 무결성이 깨지게 된다.) 정규화(데이터를 나누는) 과정이 필요하다.
	데이터 중복이 일어나지 않는 경우 정규화(erd가 정규화(데이터 중복을 찾기위해)의 일환이다.)를 할 필요는 없어진다.

	student				score
	no	name	tel		sno	subject	point
	1	홍	1111		1	java	70
	2	길	2222		1	html	80
	3	이	3333		3	java	90

	1. Full join
	- select a.name, b.subject, b.point from student a, score b;
	→ 현업에서 절대 사용해서는 안된다.
	→ student의 튜플 하나가 score의 모든 튜플을 비교
	→ 튜플 3개 X 튜플 3개 = 9개의 튜플 생성

	2. inner join
	- select a.name, b.subject, b.point from student a, score b where a.no=b.sno;
	→ 조건을 입력하여 참이 되는 경우의 튜플만 생성하게 된다.
	→ 동등 inner join(==), 비동등 inner join(!=)
	→ 튜플 1개 X 튜플 2개 = 2개의 튜플 생성

	3. outer join
	- select a.name, b.e_name, b.e_point from stu a left outer join pp b on a.no=b.no;
	→ inner join + join 되지 않은 테이블의 튜플까지 생성
	→ 기준이 되는 테이블의 모든 튜플을 생성하고 이에 해당하는 대상 테이블 튜플의 값을 가져온다.
	→ left outer join : 왼쪽 테이블이 기준
	→ right outer join : 오른쪽 테이블이 기준